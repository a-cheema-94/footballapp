@use "sass:meta";
@use "sass:list";
@use "sass:map";
@use "sass:string";
@import "helperFunctions";
@import "../../node_modules/bootstrap/scss/functions";
@import "../../node_modules/bootstrap/scss/variables";
@import "../../node_modules/bootstrap/scss/variables-dark";

// COLOR config

$dark-map: (
  "dark-lighter-2": lighten($dark, 20%),
  "dark-lighter-1": lighten($dark, 5%),
  "dark": $dark,
  "dark-darker-1": darken($dark, 5%),
  "dark-darker-2": darken($dark, 10%),
);

// add gray colors for dark mode.
$new-grays: ();

@each $key, $value in $grays {
  $new-key: gray-#{$key};

  $new-grays: map.set($new-grays, $new-key, $value);
}

$all-colors: multiple-map-merge(
  $dark-map,
  $new-grays,
  $blues,
  $indigos,
  $purples,
  $pinks,
  $reds,
  $oranges,
  $yellows,
  $greens,
  $teals,
  $cyans
);

$all-colors: map.merge(
  $all-colors,
  (
    "white": $white,
    "black": $black,
  )
);

// use created map of $all-colors to create custom classes for text, bg and bg-hover with the colors attached.

@each $name, $color in $all-colors {
  .text-#{$name} {
    color: $color !important;
  }

  .bg-#{$name} {
    background-color: $color !important;
  }

  .bg-hover-#{$name}:hover {
    cursor: pointer;
    background-color: $color !important;

    @if (string.index($name, "-")) {
      $number: string.slice(
        $string: $name,
        $start-at: string.index($name, "-") + 1,
        $end-at: -1,
      );

      @if (string-to-number($number) > 300) {
        color: $white;
      }
    } @else {
      color: $black;
    }
  }
}

/* FONTS */

@import url("https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400..900;1,400..900&family=Poppins&display=swap");

.playfair-display-400 {
  font-family: "Playfair Display", serif;
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: italic;
}

* {
  box-sizing: border-box;
}

/* Navbar */

.custom-navbar {
  transition: opacity 0.75s ease-in-out;
}

/* override the change to white hamburger menu icon with new svg for both modes in black */

.navbar-toggler-icon {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba(0, 0, 0, 1)' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
}

/* leagues breadcrumb links */
.breadcrumb-item a {
  text-decoration: none;
  color: white;
}

/* carousel */

/* carousel buttons */
button.slick-prev:before,
button.slick-next:before {
  color: black;
}

/* dropdown side menu */
.dropdown-menu.show {
  padding: 0;
  border: none;
}

/* live fixture card animation */
.scale-up {
  animation: scaleUp 1s infinite;
}

@keyframes scaleUp {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.3);
  }

  100% {
    transform: scale(1);
  }
}

/* top player table styles */
th {
  font-weight: 500;
}
tr td:hover {
  cursor: pointer;
}

.homepage-playerData-text:hover::after {
  content: attr(title);
}

/* football news */

/* make font size relative to the container. */
.news-story-container {
  container-type: inline-size;
}

.news-story-container > h2:hover {
  text-decoration: underline;
}

.news-story-container > h2 {
  font-size: 5.5cqi;
}

.news-story-container.large-screen > h2 {
  font-size: 4cqi;
}

.news-story-container > div > p {
  font-size: 4cqi;
}

.news-story-container.large-screen > div > p {
  font-size: 3cqi;
}

// tabs in HomePage

// tabs => light mode
.customTabs.light .nav-link {
  color: $dark;
  background-color: $light;
}

.customTabs.light .nav-link:hover {
  background-color: map-get($map: $teals, $key: "teal-100");
}

.customTabs.light .nav-link.active {
  color: $dark;
  background-color: map-get($map: $teals, $key: "teal-300");
}

// tabs => dark mode

.customTabs.dark .nav-link {
  color: $light;
  background-color: $dark;
}

.customTabs.dark .nav-link:hover {
  background-color: map-get($map: $teals, $key: "teal-700");
}

.customTabs.dark .nav-link.active {
  color: $light;
  background-color: map-get($map: $teals, $key: "teal-600");
}

// class for progress dots in LiveScores:
.dark-dots .slick-dots li button:before {
  color: $light;
}

.dark-dots .slick-dots li.slick-active button:before {
  color: $light;
}

.dark-dots button.slick-prev:before,
.dark-dots button.slick-next:before {
  color: $light;
}